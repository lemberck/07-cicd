apiVersion: apps/v1 # Defines the API version for Deployment

kind: Deployment # Specifies the kind of resource you want to create

metadata:
  name: frontend-deployment # Name of the deployment
  namespace: sentiment-analysis-mlops # Namespace in which the deployment is created
  labels:
    app: frontend-app # Labels for the deployment

spec:
  replicas: 2 # Specifies the number of desired instances

  selector:
    matchLabels:
      env: production-frontend # Selects the template with matching labels

  template: # Template for the pods that will be created
    metadata:
      labels:
        env: production-frontend # Labels for the pods to match the selector
        
    spec: # The specification to define the containers the pods will run
      containers:
      - name: frontend-container # The name of the container
        image: lemberck/sentiment-analysis-mlops:frontend-latest # The image of the container from Docker Hub
        imagePullPolicy: Always #Pulls the latest image from DockerHub everytime.
        ports:
        - containerPort: 8501 # The port on which the container will listen for connections


##########
# This manifest will create a deployment in Kubernetes 
# that manages two replicas of your frontend application, 
# pulling the image from the specified repository on Docker Hub. 
# Each pod will expose container port 8501, which is the default 
# port for Streamlit applications. If you have configured the Streamlit 
# app to use a different port, you should update the containerPort field 
# accordingly.
# imagePullPolicy: Always --> This was done to keep the same tags. Without this, kubernetes was not
# getting the latest image, but using the cached one without the modifications. Another
# strategy, used in productions, is to create images with different tags each release, then 
# change manually at the deployment the 'spec>containers>image', for more control, and then
# run 'kubectl apply' novamente.
##########
